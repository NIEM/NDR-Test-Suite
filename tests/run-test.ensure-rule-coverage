#!/usr/bin/env bash

. "$(dirname "$0")"/../lib/common.bash
. "$NDR_TOOLS_ROOT_DIR"/lib/fn_test.bash
. "$NDR_TOOLS_ROOT_DIR"/lib/fn_fail.bash
. "$NDR_TOOLS_ROOT_DIR"/lib/temp.bash

cd "$(dirname "$0")"

vecho_location

EXIT_STATUS=0

temp_make_file RULES RULE_DIRS TESTS

"$NDR_TOOLS_ROOT_DIR"/bin/xalan -- \
	-IN "$("$NDR_TOOLS_ROOT_DIR"/bin/get-java-pathname "$NDR_TOOLS_ROOT_DIR"/lib/ndr-id-map.xml)" \
	-XSL "$("$NDR_TOOLS_ROOT_DIR"/bin/get-java-pathname "$NDR_TOOLS_ROOT_DIR"/lib/get-rule-descriptive-ids.xsl)" \
	| sort -u > "$RULES"

if "$NDR_TOOLS_ROOT_DIR"/bin/is-cygin
then sed -i -e 's/\r//' "$RULES"
fi

find rules -maxdepth 1 -mindepth 1 -type d | sed -e 's%^rules/%%' | sort -u > "$RULE_DIRS"

while read -r -d $'\n'
do test_fail "No rule test dir for rule \"$REPLY\""
done < <(comm -23 "$RULES" "$RULE_DIRS")

while read -r -d $'\n'
do test_fail "Rule test dir exists for nonexistent rule \"$REPLY\""
done < <(comm -13 "$RULES" "$RULE_DIRS")

while read -r -d $'\n'
do 
    rule_dir=rules/$REPLY
    if [[ -d $rule_dir ]]
    then find "$rule_dir" -type f -name 'run-test*' ! -name '*~' > "$TESTS"
        if [[ ! -s $TESTS ]]
        then test_fail "No tests in rule test dir \"$rule_dir\""
        else
            while read -r -d $'\n' test
            do
                if [[ ! -x "$test" ]]
                then test_fail "candidate test \"$test\" is not executable"
                fi
            done < "$TESTS"
        fi
    else test_fail "Fail: Didn't find expected rule dir \"$rule_dir\""
    fi
done < "$RULE_DIRS"

test_exit
